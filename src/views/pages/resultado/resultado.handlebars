
<main>
    <h1 class="text-center mb-5">RESULTADO</h1>
    <div class="mb-5">
        <div class="flex items-center w-[95%] mx-auto">
            <h3 class="mr-2">FILTROS:</h3>
            <div class="w-[100%] flex justify-around">
                <select name="filter-result" class="w-[30%] border-1 mr-2 rounded-md">
                    <option value="" checked>-</option>
                    <option value="aprovados">Aprovados</option>
                    <option value="reprovados">Reprovados</option>
                </select>
                <input id="filter_seach" class="w-[65%] border-1 rounded-md py-1 px-2" type="text" placeholder="Pesquisar por nome...">
            </div>
        </div>
    </div>
    <table class="mx-auto min-w-[95%]">
        <thead>
            <tr>
                <th>ID</th>
                <th>NOME</th>
                <th>MEDIA</th>
                <th>STATUS</th>
            </tr>
        </thead>
        <tbody id="data-result" class="overflow-y-visible">
        </tbody>
    </table>
    <!--CODIGO PARA ATUALIZAR DADOS DINAMICAMENTE SEM PRECISAR CARREGAR PAGINA -->
    <script>
        const containerDataResult = document.querySelector('#data-result');
        //URL BASE:
        const url_api = "http://localhost:3000";

        //PEGAR DADOS:
        async function getAllResult () {
            return await fetch(`${url_api}/get-all-result`).then(response => response.json());
        }

        function createTD(text){
            const td = document.createElement("td");
            td.innerText = text;
            return td;
        }

        function createTr(tds){
            const tr = document.createElement('tr');
            for(const td of tds){
                tr.appendChild(td);
            }
            return tr;
        }

        function clearTable (){
            const tds = containerDataResult.querySelectorAll('tr');
            for(const td of tds) td.remove();
        }

        function updateTable(response){
            //LIMPAR TDS:
            clearTable();
            response = response.filter( el => parseInt(el.media));
            //CRIA OS ELEMENTOS:
            for(const datas of response) {
                const tds = [];
                for(const data in datas) tds.push(createTD(datas[data]));
                datas.media >= 6 ? tds.push(createTD('Aprovado')) : tds.push(createTD('Reprovado'));
                //INCLUIR NA VIEW OS ELEMENTOS:
                containerDataResult.appendChild(createTr(tds));
            }
        }

        //FILTRO DE STATUS:
        async function filter_status () {
            const selectFilter = document.querySelector('select[name="filter-result"]');
            selectFilter.addEventListener('change', async (event) => {
                const selectValue = event.target.value;
                if(selectValue) {
                    const allResult = await getAllResult();
                    const data = allResult.filter((element) => {
                        if(selectValue == "aprovados") return element.media > 5;
                        return element.media < 6;
                    })
                    updateTable(data);
                } else {
                    loadDataResult ()
                }
            })
        }

        //FILTRO DE PESQUISAR
        async function filter_seach(){
            const inputText = document.querySelector('#filter_seach');
            inputText.addEventListener('change', async (event)=> {
                const inputText = event.target.value;
                if(inputText) {
                    console.log(inputText)
                    const allResult = await getAllResult();
                    const data = allResult.filter((element) => {
                        let response = false;
                        for(const el in element) {
                            if(`${element[el]}`.toLowerCase().includes(inputText.toLowerCase())) response = true;
                        }
                        return response;
                    })
                    updateTable(data);
                } else {
                    loadDataResult ()
                }
            })
        }



        async function loadDataResult (filter, data) { 
            //PEGA AS TDS:
            const allResult = await getAllResult();
            //CARREGAR DADOS:
            updateTable(allResult);
            //FILTRO STATUS:
            filter_status ();
            //FILTRO PESQUISAR:
            filter_seach();
        }
        
        
        loadDataResult();
    </script>
</main>
